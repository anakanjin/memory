void planMS_Indo1() {
  int a=0;
  cp[0] = 0;
  c(0, 0, hitam, 3,  10, 60,  150, 60, 0b0000000000011, atau, 0,  free, 100,  -50, 130, 0b00000001100000, atau); //0
  c(1, 0, hitam, 3,  10, 60,  150, 60, 0b0000000000011, atau, 0,  free, 100,  -50, 200, 0b00000001100000, atau);
  c(2, 0, hitam, 4,  12, 60,  200, 60, 0b1100000000000, atau, 0,  free, -50,  100, 150, 0b00000001100000, atau);
  c(3, 0, hitam, 4,  16, 60,  385, 50,              TM, atau, 0,  pick,   0,    0, 190, 0b00000001100000, atau);
  c(4, 0, hitam, 3,  10, 60,    0, 60,              TM, atau, 0,  free,  50,  -50, 800, 0b00000001100000, atau);
  c(5, 0, hitam, 4,  20, 60,   80, 60, 0b1100000000000, atau, 0,  free, -50,  100, 150, 0b00000001100000, atau);
  c(6, 0, hitam, 4,  20, 60,   20, 60, 0b0000000000011, atau, 0,  free, 130,  -50, 170, 0b00000001100000, atau);
  c(7, 0, hitam, 3,  10, 60,  180, 60, 0b1100000000000, atau, 0,  free, -50,  120, 190, 0b00000001100000, atau);
  c(8, 0, hitam, 3,  10, 60,  150, 60, 0b0000000000011, atau, 0,  free, 110,  -50, 110, 0b00000001100000, atau);
  c(9, 0, hitam, 4,  16, 60,  180, 60, 0b1100000000000, atau, 0,  free, -50,  150, 170, 0b00000001100000, atau);
 c(10, 0, hitam, 4,  16, 60,  180, 60, 0b0000000000011, atau, 0,  free, 150,  -50, 190, 0b00000001100000, atau);
 c(11, 0, hitam, 3,  10, 60,   10, 60, 0b1100000000000, atau, 0,  free, -50,  110, 130, 0b00000001100000, atau);
 c(12, 0, hitam, 3,  10, 60,  120, 60,              TM, atau, 0,  drop,   0,    0, 190, 0b00000001100000, atau);
 c(13, 0, hitam, 4,  12, 60,    0, 60,              TM, atau, 0,  free,  50,  -50, 800, 0b00000001100000, atau);
 c(14, 0, hitam, 4,  12, 60,  100, 60, 0b1100000000000, atau, 0,  free, -50,  110, 180, 0b00000001100000, atau);
 c(15, 0, hitam, 4,  12, 60,  200, 60, 0b0000000000011, atau, 0,  free, 130,  -50, 150, 0b00000001100000, atau);
 c(16, 0, hitam, 4,  12, 60,  100, 60, 0b1100000000000, atau, 0,  free, -50,  100, 130, 0b00000001100000, atau);
 c(17, 0, hitam, 3,  12, 60,  120, 60, 0b0000000000011, atau, 0,  free, 130,  -50, 180, 0b00000001100000, atau);
 c(18, 0, hitam, 3,  12, 60,  250, 60, 0b0000000000011, atau, 0,  free, 150,  -50, 180, 0b00000001100000, atau);
 c(19, 0, hitam, 4,  20, 60,  150, 60, 0b1100000000000, atau, 0,  free, -50,  150, 230, 0b00000001100000, atau);
 c(20, 0, hitam, 4,  20, 60,  485, 30,              TM, atau, 0,  pick,   0,    0, 190, 0b00000001100000, atau);
 c(21, 0, hitam, 3,  10, 60,    0, 60,              TM, atau, 0,  free,  50,  -50, 800, 0b00000001100000, atau);
 c(22, 0, hitam, 4,  20, 60,  150, 60, 0b0000000000011, atau, 0,  free, 150,  -50, 250, 0b00000001100000, atau);
 c(23, 0, hitam, 4,  20, 60,  150, 60, 0b1100000000000, atau, 0,  free, -70,  170, 240, 0b00000001100000, atau);
 c(24, 0, hitam, 3,  10, 60,  180, 60, 0b1100000000000, atau, 0,  free, -50,  120, 180, 0b00000001100000, atau);
 c(25, 0, hitam, 3,  10, 60,  150, 60, 0b0000000000011, atau, 0,  free, 110,  -50, 110, 0b00000001100000, atau);
 c(26, 0, hitam, 3,  15, 60,  150, 60, 0b1100000000000, atau, 0,  free, -70,  150, 200, 0b00000001100000, atau);
 c(27, 0, hitam, 3,  12, 60,  250, 60, 0b1100000000000, atau, 0,  free, -50,  150, 200, 0b00000001100000, atau);
 c(28, 0, hitam, 4,  20, 60,  150, 60, 0b0000000000011, atau, 0,  free, 170,  -70, 250, 0b00000001100000, atau);
 c(29, 0, hitam, 4,  16, 60,  470, 60,              TM, atau, 0,  drop,   0,    0, 190, 0b00000001100000, atau);
 c(30, 0, hitam, 3,  10, 60,    0, 60,              TM, atau, 0,  free,  50,  -50, 800, 0b00000001100000, atau);
 c(31, 0, hitam, 4,  20, 60,  130, 60, 0b0000000000011, atau, 0,  free, 150,  -50, 250, 0b00000001100000, atau);
 c(32, 0, hitam, 4,  20, 60,  150, 60, 0b1100000000000, atau, 0,  free, -70,  170, 240, 0b00000001100000, atau);
 c(33, 0, hitam, 3,  10, 60,  180, 60, 0b1100000000000, atau, 0,  free, -50,  120, 180, 0b00000001100000, atau);




} 

void planMS_Indo2() {

  cp[0] = 0;
  c(0, 0, hitam, 3,  10, 120,  100, 50, 0b0000000000011, atau, 0,  free, 100,  -50, 130, 0b11111111000000, atau);
  c(1, 0, hitam, 3,  20, 100,  100, 60, 0b0000000000011, atau, 0,  free, 100,  -50, 150, 0b11111110000000, atau);
  c(2, 0, hitam, 3,  20, 110,  100, 60, 0b1100000000000, atau, 0,  free, -50,  100, 250, 0b00000001111111, atau);
  c(3, 0, hitam, 3,  15, 100,  10,  50, 0b0000000000011, atau, 0,  free, 100,  -50, 150, 0b11111110000000, atau);
  c(4, 0, hitam, 3,  20, 50,   250, 50,              TM, atau, 0,  pick,   0,  0, 0,     0b11111110000000, atau);
  c(5, 0, hitam, 3,  12, 100,    0, 50,              TM, atau, 0,  free, -50,  50, 730, 0b11111110000000, atau);
  c(6, 0, hitam, 3,  10, 50,   200, 50, 0b0000000000011, atau, 0,  free, 100, -50, 180, 0b11111110000000, atau);
  c(7, 0, hitam, 3,  20, 120,  150, 50, 0b1100000000000, atau, 0,  free, -50,  100, 230, 0b00000001111111, atau);
  c(8, 0, hitam, 3,  20, 100,  170, 50, 0b0000000000011, atau, 0,  free, 100, -50, 170, 0b11111110000000, atau);
  c(9, 0, hitam, 5,  20, 100,  100, 50, 0b1100000000000, atau, 0,  free, -50,  100, 280, 0b00000001111111, atau);
  c(10, 0, hitam, 4, 20, 100,  120, 50, 0b0000000000011, atau, 0,  free, 100,  -50, 280, 0b11111110000000, atau);
  c(11, 0, hitam, 3, 15, 100,   10, 50, 0b1100000000000, atau, 0,  free, -50,  100, 150, 0b00000001111111, atau);
  c(12, 0, hitam, 3, 12, 50,   190, 50,              TM, atau, 0,  drop,  0,   0,  0,    0b11111110000000, atau);
  c(13, 0, hitam, 3, 20, 100,    0, 50,              TM, atau, 0,  free, 50,  -50, 750, 0b11111110000000, atau);
  c(14, 0, hitam, 3, 20, 100,  190, 50, 0b1100000000000, atau, 0,  free, -50,  100, 220, 0b00000001111111, atau);
  c(15, 0, hitam, 4,  20, 100, 100, 50, 0b0000000000011, atau, 0,  free, 100,  -50, 190, 0b11111110000000, atau);
  c(16, 0, hitam, 4,  20, 100, 160, 50, 0b1100000000000, atau, 0,  free, -50,  100, 150, 0b00000001111111, atau);
  c(17, 0, hitam, 3,  20, 110, 130, 50, 0b0000000000011, atau, 0,  free, 100,  -50, 200, 0b11111110000000, atau);
  c(18, 0, hitam, 4,  20, 110, 160, 50, 0b0000000000011, atau, 0,  free, 100,  -50, 240, 0b11111110000000, atau);
  c(19, 0, hitam, 4,  20, 100, 140, 50, 0b1100000000000, atau, 0,  free, -50,  100, 350, 0b00000001111111, atau);
  c(20, 0, hitam, 3,  20, 50,  630, 40,              TM, atau, 0,  pick,   0,    0,   0, 0b11111110000000, atau);
  c(21, 0, hitam, 3,  12, 100,   0, 50,              TM, atau, 0,  free,  -50,   50, 760, 0b00000001111111, atau);
  c(22, 0, hitam, 5,  25, 100, 200, 50, 0b0000000000011, atau, 0,  free, 100,  -50, 380, 0b11111110000000, atau);
  c(23, 0, hitam, 5,  25, 120, 90, 50, 0b1100000000000, atau, 0,  free, -50,  100, 270, 0b00000001111111, atau);
  c(24, 0, hitam, 3,  16, 120, 100, 50, 0b1100000000000, atau, 0,  free, -50,  100, 250, 0b00000001111111, atau);
  c(25, 0, hitam, 4,  20, 100,  160, 50, 0b0000000000011, atau, 0,  free, 100, -50, 180, 0b11111110000000, atau);
  c(26, 0, hitam, 4,  20, 100,  160, 50, 0b1100000000000, atau, 0,  free, -50,  100, 250, 0b00000001111111, atau);
  c(27, 0, hitam, 4,  15, 100, 100, 50, 0b1100000000000, atau, 0,  free, -50,  100, 250, 0b00000001111111, atau);
  c(28, 0, hitam, 4,  20, 100,  150, 50, 0b0000000000011, atau, 0,  free, 100, -50, 330, 0b11111110000000, atau);
  c(29, 0, hitam, 3,  20, 50,  630, 50,               TM, atau, 0,  drop,  0,   0,  0,    0b00000110000000, atau);
  c(30, 0, hitam, 3,  12, 100,    0, 50,              TM, atau, 0,  free, 50,  -50, 780, 0b00000110000000, atau);
  c(31, 0, hitam, 5,  25, 100,  200, 50, 0b1100000000000, atau, 0,  free, -50,  100, 330, 0b00000001111111, atau);
  c(32, 0, hitam, 5,  25, 110,  100, 50, 0b0000000000011, atau, 0,  free, 100, -50, 200, 0b11111110000000, atau);
  c(33, 0, hitam, 3,  10, 100, 100, 60, 0b0000000000011, atau, 0,  free, 100,  -50, 200, 0b11111110000000, atau);
  c(34, 0, hitam, 3,  16, 100,  100, 50, 0b1100000000000, atau, 0,  free, -50,  100, 350, 0b00000001111111, atau);
  c(35, 0, hitam, 4,  20, 110, 350, 50, 0b1100000000000, atau, 0,  free, -50,  100, 250, 0b00000001111111, atau);
  c(36, 2, hitam, 4, 8, 110, 2000, 50, 0b1100000000000, atau, 0,  free, -50,  100, 250, 0b00000001111111, atau);


}
void planellcozARKAN() {

  cp[0] = 0;    //KP KD SPD TMR SPD2    SENSOR             brake  mtr    ki   ka   delay      pid2
  c(0, 0, hitam, 4, 12, 100, 100, 90, 0b00000000000011, atau,  0, free, 100,  -50, 200, 0b00000011000000, atau);
  c(1, 0, hitam, 4, 12, 100, 100, 90, 0b00000000000011, atau,  0, free, 100,  -50, 245, 0b00000011000000, atau);
  c(2, 0, hitam, 3, 10, 100, 130, 55, 0b11000000000000, atau,  0, free, -50,  100, 250, 0b00000011000000, atau);
  c(3, 0, hitam, 3, 10, 55, 500, 55,               TM, atau,  0,  pick,  13,   13,350, 0b00000011000000, atau);
  c(4, 0, hitam, 3, 10, 50,   0, 50,               US, atau,  0, free,  70,  70, 200, 0b00000011000000, atau);
  c(5, 0, hitam, 3, 10, 60, 250, 40, 0b00000000000011, atau,  0, free, 100,  -50, 190, 0b00000011000000, atau);
  c(6, 0, hitam, 3, 10, 80, 250, 60, 0b11000000000000, atau,  0, free, -50,  100, 190, 0b00000011000000, atau);
  c(7, 0, hitam, 3, 10, 85, 110, 85, 0b00000000000011, atau,  0, free, 100,  -50,  145, 0b00000011000000, atau);
  c(8, 0, hitam, 3, 10, 85, 100, 85, 0b11000000000000, atau,  0, free, -50,  100,  205, 0b00000011000000, atau);
  c(9, 0, hitam, 3, 10, 80, 150, 70, 0b00000000000011, atau,  0, free, 100,  -50,  220, 0b00000011000000, atau);
  c(10, 0, hitam, 4, 14, 60, 345, 60,               TM, atau,  0, free,  0,    0,  250, 0b00000011000000, atau);
  c(11, 0, hitam, 3, 10, 45,  30, 40,               TM, atau,  0, free, 80,  -80,  555, 0b00000011000000, atau);
  c(12, 0, hitam, 3, 10, 50, 200, 50, 0b11000000000000, atau,  0, free, -50,  100,  250, 0b00000011000000, atau);
  c(13, 0, hitam, 3, 10, 60, 120, 60, 0b00000000000011, atau,  0, free, 100,  -50,  170, 0b00000011000000, atau);
  c(14, 0, hitam, 3, 10, 85, 150, 85, 0b11000000000000, atau,  0, free, -50,  100,  130, 0b00000011000000, atau);
  c(15, 0, hitam, 3, 10, 85, 150, 85, 0b00000000000011, atau,  0, free, 100,  -50,  190, 0b00000011000000, atau);
  c(16, 0, hitam, 3, 10, 85, 100, 85, 0b00000000000011, atau,  0, free, 100,  -50,  235, 0b00000011000000, atau);
  c(17, 0, hitam, 3, 10, 50,  30, 50, 0b11000000000000, atau,  0, free, -50,  100,  300, 0b00000011000000, atau);
  c(18, 0, hitam, 3, 10, 75, 500, 50,               TM, atau,  0, free,   0,    0,  300, 0b00000011000000, atau);
  c(19, 0, hitam, 3, 10, 45,  0, 40,               TM, atau,  0, free, 70,  -70,  540, 0b00000011000000, atau);
  c(20, 0, hitam, 4, 12, 90, 245, 90, 0b00000000000011, atau,  0, free, 100,  -50, 500, 0b00000011000000, atau);
  c(21, 0, hitam, 4, 12, 60, 40, 60, 0b11000000000000, atau,  0, free, -50,  100,  250, 0b00000011000000, atau);
  c(22, 0, hitam, 3, 10, 85, 50, 85, 0b11000000000000, atau,  0, free, -70,  130,  195, 0b00000011000000, atau);
  c(23, 0, hitam, 3, 10, 85,  50, 85, 0b00000000000011, atau,  0, free, 100,  -50,  190, 0b00000011000000, atau);
  c(24, 0, hitam, 3, 10, 85, 110, 70, 0b11000000000000, atau,  0, free, -50,  100,  215, 0b00000011000000, atau);
  c(25, 0, hitam, 3, 10, 70, 75, 70, 0b11000000000000, atau,  0, free, -50,  100,   245, 0b00000011000000, atau);
  c(26, 0, hitam, 3, 10, 50, 70, 45, 0b00000000000011, atau,  0, free, 100,  -50,  305, 0b00000011000000, atau);
  c(27, 0, hitam, 3, 10, 60, 375, 50,               TM, atau,  0, free,   0,    0,  300, 0b00000011000000, atau);
  c(28, 0, hitam, 3, 10, 45,   0, 40,               TM, atau,  0, free,  80,  -80,  485, 0b00000011000000, atau);
  c(29, 0, hitam, 3, 10, 60, 120, 60, 0b11000000000000, atau,  0, free, -50,  130, 330, 0b00000011000000, atau);
  c(30, 0, hitam, 3, 10, 80, 50, 60, 0b00000000000011, atau,  0, free, 100,  -50,  230, 0b00000011000000, atau);
  c(31, 0, hitam, 3, 10, 85, 100, 85, 0b00000000000011, atau,  0, free, 100,  -50, 215, 0b00000011000000, atau);
  c(32, 0, hitam, 3, 10, 60,  20, 50, 0b11000000000000, atau, 0, free, -50, 100,  360, 0b00000011000000, atau);
  c(33, 0, hitam, 3, 10, 95, 180, 95,               TM, atau,  0, free,   0,    0,   0, 0b00000011000000, atau);
  c(34, 0, hitam, 5, 20, 80,   5, 80, 0b11000000000000, atau,  0, free, -50,  100, 310, 0b00000011000000, atau);
  c(35, 0, hitam, 5, 20, 65, 310, 55, 0b00110000000000, atau,  0, free, 100,  -50,  20, 0b00000011000000, atau);
  c(36, 0, hitam, 3, 10, 55, 170, 55, 0b11000000000000, atau,  0, free, -50,  100, 175, 0b00000011000000, atau);
  c(37, 0, hitam, 5, 20, 55,   0, 55, 0b00000000000011, atau,  0, free, 120,  -10, 454, 0b00000011000000, atau);
  c(38, 0, hitam, 5, 20, 55,   0, 55, 0b11000000000000, atau,  0, free, -10,  120, 410, 0b00000011000000, atau);
  c(39, 0, hitam, 5, 20, 55,   0, 55, 0b00000000000011, atau,  0, free, 120,  -10, 650, 0b00000011000000, atau);
  c(40, 0, hitam, 3, 10, 55,   0, 55,               TM, atau,  0, free,   0,    0, 470, 0b00000011000000, atau);
  c(41, 0, hitam, 3, 10, 55,   0, 55,               TM, atau,  0, free, -20,   90, 300, 0b00000011000000, atau);
  c(42, 0, hitam, 5, 20, 85,  50, 85, 0b00000000000011, atau,  0, free, 100,  -50, 150, 0b00000011000000, atau);
  c(43, 0, hitam, 7, 16, 80, 1000, 80, 0b00000000000011, atau,  0, free, 100,  -50, 250, 0b00000011000000, atau);
  c(44, 0, hitam, 3, 10, 95,  0, 95,                TM, atau,  0, free,  100,  -10, 285, 0b00000011000000, atau);
  c(45, 0, hitam, 3, 10, 95,  10, 95, 0b11000000000000, atau,  0, free, -50,  100, 235, 0b00000011000000, atau);
  c(46, 0, hitam, 3, 10, 95,  0, 95,              TM, atau,  0, free, 0,  0, 500, 0b00000011000000, atau);
  c(47, 0, hitam, 3, 10, 95,  0, 95,            TM, atau,  0, free, 70,  -70, 630, 0b00000011000000, atau);
  c(48, 0, hitam, 3, 10, 75,200, 75, 0b11000000000000, atau,  0, free, 100,  -50, 170, 0b00000011000000, atau);
  c(49, 0, hitam, 3, 10, 95,  100, 95, 0b00000000000011, atau,  0, free, 100,  -50, 140, 0b00000011000000, atau);

}

 void planMS_Indo3() {

  cp[0] = 0;
  c(0, 0, hitam, 3,  10, 80,  100, 80, 0b0000000000011, atau, 0,  free, 100,  -50, 130, 0b11111111000000, atau);
  c(1, 0, hitam, 3,  10, 80,  100, 80, 0b0000000000011, atau, 0,  free, 100,  -50, 150, 0b11111110000000, atau);
  c(2, 0, hitam, 3,  10, 80,  100, 80, 0b1100000000000, atau, 0,  free, -50,  100, 250, 0b00000001111111, atau);
  c(3, 0, hitam, 4,  16, 60,  380, 50,              TM, atau, 0,  pick,   0,    0, 190, 0b00000001100000, atau);
  c(4, 0, hitam, 3,  10, 60,    0, 60,              TM, atau, 0,  free,  50,  -50, 800, 0b00000001100000, atau);
  c(5, 0, hitam, 3,  10, 60,   80, 60, 0b1100000000000, atau, 0,  free, -50,  100, 150, 0b00000001100000, atau);
  c(6, 0, hitam, 3,  10, 60,   20, 60, 0b0000000000011, atau, 0,  free, 130,  -50, 170, 0b00000001100000, atau);
  c(7, 0, hitam, 3,  10, 60,  180, 60, 0b1100000000000, atau, 0,  free, -50,  120, 190, 0b00000001100000, atau);
  c(8, 0, hitam, 3,  10, 60,  150, 60, 0b0000000000011, atau, 0,  free, 110,  -50, 110, 0b00000001100000, atau);
  c(9, 0, hitam, 4,  12, 60,  180, 60, 0b1100000000000, atau, 0,  free, -50,  150, 170, 0b00000001100000, atau);
 c(10, 0, hitam, 4,  12, 60,  180, 60, 0b0000000000011, atau, 0,  free, 150,  -50, 190, 0b00000001100000, atau);
 c(11, 0, hitam, 3,  10, 60,   20, 60, 0b1100000000000, atau, 0,  free, -50,  110, 130, 0b00000001100000, atau);
 c(12, 0, hitam, 3,  10, 60,  100, 60,              TM, atau, 0,  drop,   0,    0, 190, 0b00000001100000, atau);
 c(13, 0, hitam, 4,  12, 60,    0, 60,              TM, atau, 0,  free,  50,  -50, 800, 0b00000001100000, atau);
 c(14, 0, hitam, 4,  12, 60,  100, 60, 0b1100000000000, atau, 0,  free, -50,  110, 180, 0b00000001100000, atau);
 c(15, 0, hitam, 4,  16, 60,  200, 60, 0b0000000000011, atau, 0,  free, 130,  -50, 150, 0b00000001100000, atau);
 c(16, 0, hitam, 4,  12, 60,  100, 60, 0b1100000000000, atau, 0,  free, -50,  100, 130, 0b00000001100000, atau);
 c(17, 0, hitam, 3,  12, 60,  120, 60, 0b0000000000011, atau, 0,  free, 130,  -50, 180, 0b00000001100000, atau);
 c(18, 0, hitam, 3,  12, 60,  250, 60, 0b0000000000011, atau, 0,  free, 150,  -50, 180, 0b00000001100000, atau);
 c(19, 0, hitam, 4,  20, 60,  150, 60, 0b1100000000000, atau, 0,  free, -50,  150, 230, 0b00000001100000, atau);
 c(20, 0, hitam, 4,  20, 60,  470, 30,              TM, atau, 0,  pick,   0,    0, 190, 0b00000001100000, atau);
 c(21, 0, hitam, 3,  10, 60,    0, 60,              TM, atau, 0,  free,  50,  -50, 900, 0b00000001100000, atau);
 c(22, 0, hitam, 4,  20, 60,  180, 60, 0b0000000000011, atau, 0,  free, 150,  -50, 250, 0b00000001100000, atau);
 c(23, 0, hitam, 4,  20, 60,  150, 60, 0b1100000000000, atau, 0,  free, -70,  170, 240, 0b00000001100000, atau);
 c(24, 0, hitam, 3,  10, 60,  180, 60, 0b1100000000000, atau, 0,  free, -50,  120, 180, 0b00000001100000, atau);
 c(25, 0, hitam, 3,  10, 60,  150, 60, 0b0000000000011, atau, 0,  free, 110,  -50, 110, 0b00000001100000, atau);
 c(26, 0, hitam, 3,  15, 60,  150, 60, 0b1100000000000, atau, 0,  free, -70,  150, 200, 0b00000001100000, atau);
 c(27, 0, hitam, 3,  12, 60,  250, 60, 0b1100000000000, atau, 0,  free, -50,  150, 200, 0b00000001100000, atau);
 c(28, 0, hitam, 3,  12, 60,  150, 60, 0b0000000000011, atau, 0,  free, 170,  -70, 250, 0b00000001100000, atau);
 c(29, 0, hitam, 3,  10, 60,  470, 60,              TM, atau, 0,  drop,   0,    0, 190, 0b00000001100000, atau);
 c(30, 0, hitam, 3,  10, 60,    0, 60,              TM, atau, 0,  free,  50,  -50, 800, 0b00000001100000, atau);
 c(31, 0, hitam, 3,  10, 60,  150, 60, 0b0000000000011, atau, 0,  free, 150,  -50, 250, 0b00000001100000, atau);
 c(32, 0, hitam, 4,  20, 60,  150, 60, 0b1100000000000, atau, 0,  free, -70,  170, 240, 0b00000001100000, atau);
 c(33, 0, hitam, 3,  10, 60,  180, 60, 0b1100000000000, atau, 0,  free, -50,  120, 180, 0b00000001100000, atau);


 }
 
 void planAbdiel() {

  cp[0] = 0;
  
  c(0, 0, hitam, 3,  10, 100,  100, 80, 0b0000000000011, atau, 0,  pid, 100,  -90, 110, 0b00000000110000, atau);
  c(1, 0, hitam, 3,  10, 80,  50, 80, 0b0000000000011, atau, 0,  pid, 100,  -90, 140,   0b00000000011000, atau);
  c(2, 0, hitam, 4,  10, 100,  150, 80, 0b1100000000000, atau, 0,  pid, -90,  100, 120, 0b00001110000000, atau);
  c(3, 0, hitam, 5,  12, 100,  250, 80, TM             , atau, 0,  pick, 0,  0, 190,     0b00000011000000, atau);



 }
